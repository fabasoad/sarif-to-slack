// Copyright (c) Yevhen Fabizhevskyi. All rights reserved. Licensed under the MIT license.

/**
 * Sarif to Slack message converter library.
 *
 * @remarks
 * This library provides a client to send a Slack messages based on the provided
 * SARIF (Static Analysis Results Interchange Format) files.
 *
 * @example
 * ```typescript
 * import {
 *   Color,
 *   FooterType,
 *   LogLevel,
 *   RepresentationType,
 *   SarifToSlackClient,
 *   SendIf
 * } from '@fabasoad/sarif-to-slack';
 *
 * const client: SarifToSlackClient = await SarifToSlackClient.create({
 *   webhookUrl: 'https://hooks.slack.com/services/your/webhook/url',
 *   username: 'SARIF to Slack Bot',
 *   iconUrl: 'https://example.com/icon.png',
 *   color: {
 *     default: new Color('failure'),
 *     empty: new Color('success'),
 *     bySeverity: {
 *       critical: new Color('#ff0000'),
 *       high: new Color('#ff4500'),
 *       medium: new Color('#ffa500'),
 *       low: new Color('#ffff00'),
 *       none: new Color('#808080'),
 *       unknown: new Color('#800080'),
 *     },
 *     byLevel: {
 *       error: new Color('#ff0000'),
 *       warning: new Color('#ffa500'),
 *       note: new Color('#ffff00'),
 *       none: new Color('#808080'),
 *       unknown: new Color('#800080'),
 *     },
 *   },
 *   sarif: {
 *     path: 'path/to/your/sarif-files',
 *     recursive: true,
 *     extension: 'sarif',
 *   },
 *   log: {
 *     level: LogLevel.Info,
 *     template: '[{{logLevelName}}] [{{name}}] {{dateIsoStr}} ',
 *     colored: false,
 *   },
 *   header: {
 *     include: true,
 *     value: 'SARIF Analysis Results'
 *   },
 *   footer: {
 *     include: true,
 *     type: FooterType.PLAIN_TEXT,
 *     value: 'Generated by @fabasoad/sarif-to-slack'
 *   },
 *   actor: {
 *     include: true,
 *     value: 'fabasoad'
 *   },
 *   run: {
 *     include: true
 *   },
 *   representation: RepresentationType.CompactGroupByToolNamePerSeverity,
 *   sendIf: SendIf.MediumOrHigher,
 * });
 * await client.send();
 * ```
 *
 * @see {@link SarifToSlackClient}
 *
 * @packageDocumentation
 */
export { Color } from './model/color/Color'
export {
  ColorOptions,
  ColorGroupCommon,
  ColorGroupByLevel,
  ColorGroupBySeverity
} from './model/color/ColorOptions'
export { SendIf } from './model/SendIf'
export { SlackMessage } from './model/SlackMessage'
export { SarifToSlackClient } from './SarifToSlackClient'
export {
  FooterOptions,
  FooterType,
  IncludeAwareOptions,
  IncludeAwareWithValueOptions,
  LogLevel,
  LogOptions,
  RepresentationType,
  SarifFileExtension,
  SarifOptions,
  SarifToSlackClientOptions
} from './types'
